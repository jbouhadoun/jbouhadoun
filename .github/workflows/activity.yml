name: Update Dashboard Profile
on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Analyze GitHub Activity
        id: analysis
        run: |
          echo "🔍 Analyse des contributions sur les organisations publiques..."
          
          # Organisations à analyser
          orgs="BaseAdresseNationale betagouv IGNF"
          
          # Récupérer les contributions récentes
          echo "📊 Recherche des contributions récentes..."
          recent_activity=""
          total_contributions=0
          
          for org in $orgs; do
            echo "  Analyse de l'organisation: $org"
            
            # Rechercher les pull requests
            prs=$(curl -s "https://api.github.com/search/issues?q=author:jbouhadoun+org:$org+type:pr&sort=updated&per_page=5")
            
            if [ "$(echo "$prs" | jq '.total_count // 0')" -gt 0 ]; then
              org_prs=$(echo "$prs" | jq -r --arg org "$org" '
                if .items and (.items | length > 0) then 
                  .items[] | "- **[\(.repository_url | split("/")[-1])](https://github.com/\($org)/\(.repository_url | split("/")[-1]))**: \(.title)"
                else empty end' 2>/dev/null)
              
              if [ ! -z "$org_prs" ]; then
                recent_activity="$recent_activity"$'\n'"**$org:**"$'\n'"$org_prs"$'\n'
                pr_count=$(echo "$prs" | jq '.total_count // 0')
                total_contributions=$((total_contributions + pr_count))
              fi
            fi
            
            # Petite pause pour éviter rate limiting
            sleep 1
          done
          
          # Récupérer les langages depuis toutes les organisations
          echo "🔧 Analyse des technologies utilisées..."
          all_languages=""
          
          # Langages depuis repos personnels
          personal_repos=$(curl -s "https://api.github.com/users/jbouhadoun/repos")
          personal_langs=$(echo "$personal_repos" | jq -r 'if type == "array" then .[] | .language | select(. != null) else empty end' 2>/dev/null | sort | uniq)
          
          # Langages depuis les organisations
          for org in $orgs; do
            echo "  Langages dans $org..."
            org_repos=$(curl -s "https://api.github.com/orgs/$org/repos?per_page=20")
            org_langs=$(echo "$org_repos" | jq -r 'if type == "array" then .[] | .language | select(. != null) else empty end' 2>/dev/null | sort | uniq)
            all_languages="$all_languages $org_langs"
            sleep 0.5
          done
          
          # Combiner tous les langages
          unique_languages=$(echo "$personal_langs $all_languages" | tr ' ' '\n' | sort | uniq -c | sort -rn | head -8 | awk '{print $2}')
          
          echo "Langages détectés: $unique_languages"
          
          # Créer des badges avec style similaire au dashboard
          tech_badges=""
          for lang in $unique_languages; do
            case $lang in
              "JavaScript") tech_badges="$tech_badges<img src='https://img.shields.io/badge/JavaScript-323330?style=for-the-badge&logo=javascript&logoColor=F7DF1E' alt='JavaScript'/> " ;;
              "TypeScript") tech_badges="$tech_badges<img src='https://img.shields.io/badge/TypeScript-007ACC?style=for-the-badge&logo=typescript&logoColor=white' alt='TypeScript'/> " ;;
              "Python") tech_badges="$tech_badges<img src='https://img.shields.io/badge/Python-3776AB?style=for-the-badge&logo=python&logoColor=white' alt='Python'/> " ;;
              "Java") tech_badges="$tech_badges<img src='https://img.shields.io/badge/Java-ED8B00?style=for-the-badge&logo=java&logoColor=white' alt='Java'/> " ;;
              "Go") tech_badges="$tech_badges<img src='https://img.shields.io/badge/Go-00ADD8?style=for-the-badge&logo=go&logoColor=white' alt='Go'/> " ;;
              "PHP") tech_badges="$tech_badges<img src='https://img.shields.io/badge/PHP-777BB4?style=for-the-badge&logo=php&logoColor=white' alt='PHP'/> " ;;
              "C++") tech_badges="$tech_badges<img src='https://img.shields.io/badge/C++-00599C?style=for-the-badge&logo=cplusplus&logoColor=white' alt='C++'/> " ;;
              "Shell") tech_badges="$tech_badges<img src='https://img.shields.io/badge/Shell-121011?style=for-the-badge&logo=gnu-bash&logoColor=white' alt='Shell'/> " ;;
              *) tech_badges="$tech_badges<img src='https://img.shields.io/badge/${lang}-grey?style=for-the-badge' alt='${lang}'/> " ;;
            esac
          done
          
          # Récupérer des projets représentatifs de chaque organisation
          echo "📁 Récupération des projets représentatifs..."
          featured_projects=""
          
          for org in $orgs; do
            case $org in
              "BaseAdresseNationale")
                featured_projects="$featured_projects- 🏛️ **[Base Adresse Nationale](https://github.com/BaseAdresseNationale)** - Infrastructure nationale des adresses"$'\n'
                featured_projects="$featured_projects  - [mes-adresses](https://github.com/BaseAdresseNationale/mes-adresses) - Interface de gestion des adresses"$'\n'
                featured_projects="$featured_projects  - [api-depot](https://github.com/BaseAdresseNationale/api-depot) - API de dépôt des bases adresses locales"$'\n'
                ;;
              "betagouv")
                featured_projects="$featured_projects- 🇫🇷 **[beta.gouv.fr](https://github.com/betagouv)** - Incubateur de services numériques publics"$'\n'
                ;;
              "IGNF")
                featured_projects="$featured_projects- 🗺️ **[Institut National de l'Information Géographique et Forestière](https://github.com/IGNF)** - Données géographiques officielles"$'\n'
                ;;
            esac
          done
          
          # Calculer quelques statistiques
          current_year=$(date +%Y)
          commits_this_year=$(curl -s "https://api.github.com/search/commits?q=author:jbouhadoun+author-date:${current_year}-01-01..${current_year}-12-31" | jq '.total_count // 0')
          
          echo "TECH_BADGES<<EOF" >> $GITHUB_OUTPUT
          echo "$tech_badges" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "RECENT_ACTIVITY<<EOF" >> $GITHUB_OUTPUT
          echo "$recent_activity" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "FEATURED_PROJECTS<<EOF" >> $GITHUB_OUTPUT
          echo "$featured_projects" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "TOTAL_CONTRIBUTIONS=$total_contributions" >> $GITHUB_OUTPUT
          echo "COMMITS_THIS_YEAR=$commits_this_year" >> $GITHUB_OUTPUT

      - name: Update README
        run: |
          cat > README.md << 'EOF'
          <div align="center">
            <h1> Hello </h1>
            <h3>Développeur • Service Public Numérique</h3>
          </div>
          
          ---
          
          ## 📊 GitHub Analytics
          
          <div align="center">
            <img height="180em" src="https://github-readme-stats.vercel.app/api?username=jbouhadoun&show_icons=true&theme=github_dark&include_all_commits=true&count_private=false&hide_border=true&bg_color=0d1117"/>
            <img height="180em" src="https://github-readme-stats.vercel.app/api/top-langs/?username=jbouhadoun&layout=compact&theme=github_dark&hide_border=true&bg_color=0d1117"/>
          </div>
          
          <div align="center">
            <img src="https://github-readme-streak-stats.herokuapp.com/?user=jbouhadoun&theme=github-dark-blue&hide_border=true&background=0d1117" alt="GitHub Streak"/>
          </div>
          
          ---
          
          ## 🛠️ Stack Technique
          
          <div align="center">
            
          ${{ steps.analysis.outputs.TECH_BADGES }}
            
          </div>
          
          ---
          
          ## 🏛️ Contributions au Service Public
          
          ${{ steps.analysis.outputs.FEATURED_PROJECTS }}
          
          ---
          
          ## 📈 Activité Récente
          
          ${{ steps.analysis.outputs.RECENT_ACTIVITY }}
          
          ---
          
          ## 📊 Statistiques de Contribution
          
          <div align="center">
            
          | 📊 Métrique | 📈 Valeur |
          |-------------|-----------|
          | 🎯 **Contributions totales** | ${{ steps.analysis.outputs.TOTAL_CONTRIBUTIONS }}+ |
          | 📅 **Commits cette année** | ${{ steps.analysis.outputs.COMMITS_THIS_YEAR }}+ |
          | 🏢 **Organisations publiques** | 3+ |
          | 🌟 **Projets d'utilité publique** | 10+ |
          
          </div>
          
          ---
          
          ## 🐍 Contribution Graph
          
          <div align="center">
            <img src="https://github-readme-activity-graph.vercel.app/graph?username=jbouhadoun&theme=github-compact&hide_border=true&bg_color=0d1117&color=58a6ff&line=58a6ff&point=f0f6fc" alt="Contribution Graph"/>
          </div>
          
          ---
          
          <div align="center">
            
          **👥 Contributeur actif au service public numérique français**
          
          ![Profile Views](https://komarev.com/ghpvc/?username=jbouhadoun&color=58a6ff&style=flat-square&label=Profile+Views)
          
          </div>
          
          <div align="center">
            <sub>🤖 Mis à jour automatiquement • Dernière mise à jour: $(date)</sub>
          </div>
          EOF

      - name: Commit and push
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add README.md
          git diff --staged --quiet || git commit -m "📊 Update dashboard profile with org contributions"
          git push
