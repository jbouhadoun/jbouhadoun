name: Real Contributions Stats
on:
  push:
    branches: [ main ]
  schedule:
    - cron: '0 8 * * *'
  workflow_dispatch:

jobs:
  analyze:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Analyze real contributions everywhere
        id: real_stats
        run: |
          echo "🔍 Analyse de VOS contributions réelles..."
          
          # Organisations où vous contribuez
          orgs="BaseAdresseNationale betagouv IGNF"
          
          # Initialiser les compteurs
          total_prs=0
          total_commits=0
          declare -A lang_totals
          
          echo "📊 Analyse par organisation..."
          org_details=""
          
          for org in $orgs; do
            echo "Analyse de $org..."
            
            # Compter vos PRs dans cette org
            org_prs=$(curl -s "https://api.github.com/search/issues?q=author:jbouhadoun+org:$org+type:pr" | jq '.total_count // 0')
            echo "  PRs dans $org: $org_prs"
            total_prs=$((total_prs + org_prs))
            
            # Lister les repos où vous avez contribué
            repos_contributed=""
            repos_data=$(curl -s "https://api.github.com/orgs/$org/repos?per_page=50")
            
            if [ "$(echo "$repos_data" | jq 'type')" = '"array"' ]; then
              contributed_repos=$(echo "$repos_data" | jq -r '.[] | .name' | while read repo; do
                # Vérifier si vous êtes dans les contributors
                is_contributor=$(curl -s "https://api.github.com/repos/$org/$repo/contributors" | jq -r '.[]? | select(.login == "jbouhadoun") | .contributions' 2>/dev/null)
                if [ ! -z "$is_contributor" ] && [ "$is_contributor" != "null" ] && [ "$is_contributor" -gt 0 ]; then
                  echo "$repo:$is_contributor"
                  
                  # Analyser les langages de ce repo
                  repo_langs=$(curl -s "https://api.github.com/repos/$org/$repo/languages")
                  echo "$repo_langs" | jq -r 'to_entries[]? | "\(.key):\(.value)"' >> all_languages.tmp
                fi
                sleep 0.1
              done)
              
              # Résumer pour cette org
              contrib_count=$(echo "$contributed_repos" | wc -l)
              if [ "$contrib_count" -gt 0 ]; then
                org_details="$org_details**$org** ($org_prs PRs, $contrib_count repos):"$'\n'
                echo "$contributed_repos" | while IFS=: read repo commits; do
                  if [ ! -z "$repo" ]; then
                    org_details="$org_details- [$repo](https://github.com/$org/$repo) ($commits commits)"$'\n'
                  fi
                done >> org_summary.tmp
              fi
            fi
            sleep 1
          done
          
          # Analyser vos repos personnels aussi
          echo "📊 Analyse repos personnels..."
          personal_repos=$(curl -s "https://api.github.com/users/jbouhadoun/repos?per_page=100")
          personal_count=0
          if [ "$(echo "$personal_repos" | jq 'type')" = '"array"' ]; then
            personal_count=$(echo "$personal_repos" | jq 'length')
            echo "$personal_repos" | jq -r '.[]? | .name' | while read repo; do
              repo_langs=$(curl -s "https://api.github.com/repos/jbouhadoun/$repo/languages")
              echo "$repo_langs" | jq -r 'to_entries[]? | "\(.key):\(.value)"' >> all_languages.tmp
              sleep 0.05
            done
          fi
          
          # Calculer les langages combinés
          echo "🔢 Calcul des langages combinés..."
          touch all_languages.tmp
          
          # Sommer tous les langages
          combined_langs=$(awk -F: '
          {
            lang = $1
            bytes = $2
            if (bytes == "") bytes = 0
            total[lang] += bytes
          }
          END {
            for (lang in total) {
              if (total[lang] > 0) {
                print lang ":" total[lang]
              }
            }
          }' all_languages.tmp | sort -t: -k2 -nr)
          
          # Top 6 langages
          top_langs=$(echo "$combined_langs" | head -6)
          
          # Calculer pourcentages
          total_bytes=$(echo "$combined_langs" | awk -F: '{sum+=$2} END {print sum}')
          lang_chart=""
          
          echo "$top_langs" | while IFS=: read lang bytes; do
            if [ ! -z "$lang" ] && [ "$bytes" -gt 0 ]; then
              pct=$(awk "BEGIN {printf \"%.1f\", $bytes*100/$total_bytes}")
              bar_len=$(awk "BEGIN {printf \"%.0f\", $pct/5}")
              if [ "$bar_len" -lt 1 ]; then bar_len=1; fi
              if [ "$bar_len" -gt 20 ]; then bar_len=20; fi
              
              bar=$(printf "%*s" $bar_len "" | tr ' ' '█')
              empty=$(printf "%*s" $((20-bar_len)) "" | tr ' ' '░')
              
              case $lang in
                "JavaScript") echo "🟨 **JavaScript** $bar$empty $pct%" ;;
                "TypeScript") echo "🔵 **TypeScript** $bar$empty $pct%" ;;
                "Python") echo "🐍 **Python** $bar$empty $pct%" ;;
                "Java") echo "☕ **Java** $bar$empty $pct%" ;;
                "Go") echo "🔷 **Go** $bar$empty $pct%" ;;
                "PHP") echo "🟣 **PHP** $bar$empty $pct%" ;;
                "C++") echo "⚡ **C++** $bar$empty $pct%" ;;
                "Shell") echo "⚫ **Shell** $bar$empty $pct%" ;;
                *) echo "⚪ **$lang** $bar$empty $pct%" ;;
              esac
            fi
          done > language_chart.tmp
          
          lang_display=$(cat language_chart.tmp)
          
          # Créer le résumé des contributions
          org_summary=$(cat org_summary.tmp 2>/dev/null || echo "Analyse en cours...")
          
          # Stats totales
          total_repos=$((personal_count + $(echo "$contributed_repos" | wc -l)))
          
          # Nettoyer
          rm -f all_languages.tmp org_summary.tmp language_chart.tmp
          
          # Exporter tout
          echo "TOTAL_PRS=$total_prs" >> $GITHUB_OUTPUT
          echo "TOTAL_REPOS=$total_repos" >> $GITHUB_OUTPUT
          echo "PERSONAL_REPOS=$personal_count" >> $GITHUB_OUTPUT
          
          echo "LANG_DISPLAY<<EOF" >> $GITHUB_OUTPUT
          echo "$lang_display" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
          echo "ORG_SUMMARY<<EOF" >> $GITHUB_OUTPUT
          echo "$org_summary" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update README
        run: |
          cat > README.md << 'EOF'
          # Hey, moi c'est Jugurtha 👋
          
          ## 📊 Mes vraies stats
          
          | Métrique | Valeur |
          |----------|--------|
          | 🔀 Total Pull Requests | ${{ steps.real_stats.outputs.TOTAL_PRS }} |
          | 📁 Repos contributés | ${{ steps.real_stats.outputs.TOTAL_REPOS }} |
          | 👤 Repos personnels | ${{ steps.real_stats.outputs.PERSONAL_REPOS }} |
          | 🏢 Organisations | 3+ |
          
          ## 🛠️ Langages utilisés (toutes contributions)
          
          ${{ steps.real_stats.outputs.LANG_DISPLAY }}
          
          ## 🏛️ Mes contributions
          
          ${{ steps.real_stats.outputs.ORG_SUMMARY }}
          
          ## 📈 GitHub Stats (repos personnels seulement)
          
          <div align="center">
            <img height="180em" src="https://github-readme-stats.vercel.app/api?username=jbouhadoun&show_icons=true&theme=default&include_all_commits=true"/>
          </div>
          
          <div align="center">
            <img src="https://github-readme-streak-stats.herokuapp.com/?user=jbouhadoun&theme=default"/>
          </div>
          
          ---
          
          ![Profile Views](https://komarev.com/ghpvc/?username=jbouhadoun&color=blue)
          
          <sub>Stats calculées depuis toutes mes contributions • Mis à jour automatiquement</sub>
          EOF

      - name: Commit and push
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git add README.md
          git diff --staged --quiet || git commit -m "📊 Update real contribution stats"
          git push
